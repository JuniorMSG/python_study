# re 모듈을 이용한 정규식의 기초
# 정규식 특수문자와 메타문자의 사용법 및 의미 파악

# \d
# 숫자 하나

# \D (대문자는 소문자의 반대(?)되는 개념으로 생각하면 쉽다)
# \d(숫자)가 아닌 것을 의미함 --> 즉, 문자를 의미.
import re
rst_matchObj = re.findall( '\D', 'Korea 20대 청년이여 힘내라~' )
#print( rst_matchObj )

# \w
# word를 의미함 --> 즉, 문자와 숫자를 의미.
print( "\w : ", re.findall( '\w', 'Korea 20대 청년이여 힘내라~' ) )

# \W
# \w(문자)가 아닌 것을 의미함 --> 즉, 비문자를 의미.
print( "\W : ", re.findall( '\W', 'Korea 20대 청년이여 힘내라~' ) )

# \s
# space를 의미함 --> 즉, 공백 문자나 탭 등을 의미.
print( "\s : ", re.findall( '\s', 'Korea 20대 청년이여 힘내라~' ) )

# \S
# \s(공백문자, 스페이스)가 아닌 것을 의미 --> 즉, 비공백문자를 의미.
print( "\S : ", re.findall( '\S', 'Korea 20대 청년이여 힘내라~' ) )

# \b
# 단어(문자)의 경계를 의미 --> 즉, 단어(문자)의 앞(시작) 또는 끝을 의미.

# \B
# \b(단어문자의 경계)가 아닌 곳을 의미 --> 즉, 비단어문자의 경계를 의미.












